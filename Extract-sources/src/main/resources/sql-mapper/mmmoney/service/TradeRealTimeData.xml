<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kejin.extract.mmmoney.service.dao.TradeRealTimeDataDao">
 <select id="getTradeRealTimeData"  resultType="java.util.Map"> 
 	SELECT
	(
		SELECT
			sum(a.AMOUNT)
		FROM
			invest.t_bid_order a
		INNER JOIN invest.t_invest_subject b ON a.SUBJECT_NO = b.SUBJECT_NO
		WHERE
			a.SUBJECT_TYPE IN ('SUBJECT')
		<if test="beginTime!=null">
			<![CDATA[ AND a.CREATE_TIME >= #{beginTime} ]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[ AND a.CREATE_TIME < #{endTime} ]]>
		</if>
		AND a. STATUS IN (
			'PAY_SUCCESS',
			'BID_SUCCESS'
		)
		AND b. STATUS IN ('01', '05', '10', '15', '20')
	) regularInvestAmount,
	(
		SELECT
			sum(a.new) newInvestAmount
		FROM
			(
				SELECT
					v.member_id,
					v.AMOUNT total,
					t.AMOUNT depos,
					LEAST(v.AMOUNT, t.AMOUNT) new
				FROM
					(
						SELECT
							MEMBER_ID,
							sum(a.AMOUNT) AMOUNT,
							a.CREATE_TIME
						FROM
							invest.t_bid_order a
						INNER JOIN invest.t_invest_subject b ON a.SUBJECT_NO = b.SUBJECT_NO
						WHERE
							a. STATUS IN (
								'PAY_SUCCESS',
								'BID_SUCCESS'
							)
						AND a.SUBJECT_TYPE = 'SUBJECT'
						AND b. STATUS IN ('05', '10', '15', '20')
						<if test="beginTime!=null">
							<![CDATA[ AND a.CREATE_TIME >= #{beginTime} ]]>
						</if>
						<if test="endTime!=null">
							<![CDATA[ AND a.CREATE_TIME < #{endTime} ]]>
						</if>
						GROUP BY
							a.MEMBER_ID
					) v
				LEFT JOIN (
					SELECT
						a.memberId MEMBER_ID,
						sum(amount) AMOUNT
					FROM
						(
							(
								SELECT
									t1.memberid memberId,
									t1.platformuserno platformUserNo,
									IFNULL(tcm.userRole, tei.userRole) userRole,
									t1.amount
								FROM
									custody_shbk.t_recharge t1
								LEFT JOIN custody_shbk.tr_custody_memberinfo tcm ON t1.platformuserno = tcm.platformUserNo
								LEFT JOIN custody_shbk.t_enterprise_info tei ON t1.platformuserno = tei.platformUserNo
								WHERE 1=1 
								AND t1.rechargestatus = 'SUCCESS'
								<if test="beginTime!=null">
									<![CDATA[ AND t1.gmt_modify >= #{beginTime} ]]>
								</if>
								<if test="endTime!=null">
									<![CDATA[ AND t1.gmt_modify < #{endTime} ]]>
								</if>
							)
							UNION ALL
								(
									SELECT
										b.memberId,
										a.target_platform_user_no platformUserNo,
										IFNULL(b.userRole, tei.userRole) userRole,
										a.amount
									FROM
										custody_shbk.t_business_details a
									LEFT JOIN custody_shbk.tr_custody_memberinfo b ON a.target_platform_user_no = b.platformUserNo
									LEFT JOIN custody_shbk.t_enterprise_info tei ON a.target_platform_user_no = tei.platformUserNo
									LEFT JOIN (
										SELECT
											request_no,
											modified_time
										FROM
											custody_shbk.t_transaction_details
										WHERE
											`status` = 'PAY_SUCCESS'
										AND trade_type = 'MARKETING'
										<if test="beginTime!=null">
											<![CDATA[ AND modified_time >= #{beginTime} ]]>
										</if>
										<if test="endTime!=null">
											<![CDATA[ AND modified_time < #{endTime} ]]>
										</if>
									) c ON a.request_no = c.request_no
									WHERE
										a.biz_type = 'ALTERNATIVE_RECHARGE'
									AND c.modified_time IS NOT NULL
								)
						) a
					WHERE
						a.userRole = 'INVESTOR'
					GROUP BY
						a.memberId
				) t ON v.MEMBER_ID = t.MEMBER_ID
			) a
	) newInvestAmount,
	(
		SELECT
			sum(a.PAY_AMOUNT)
		FROM
			invest.t_bid_order a
		WHERE
			a.SUBJECT_TYPE = 'CREDIT'
		<if test="beginTime!=null">
			<![CDATA[ AND a.CREATE_TIME >= #{beginTime} ]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[ AND a.CREATE_TIME < #{endTime} ]]>
		</if>
		AND a. STATUS IN (
			'BID_SUCCESS',
			'PAY_SUCCESS'
		)
	) creditInvestAmount,
	(
		SELECT
			SUM(a.AMOUNT) AMOUNT
		FROM
			invest.t_recovery_order_detail a
		WHERE
			1 = 1
		<if test="beginTime!=null">
			<![CDATA[ AND a.CREATE_TIME >= #{beginTime} ]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[ AND a.CREATE_TIME < #{endTime} ]]>
		</if>
	) recoveryAllAmount,
	(
		SELECT
			count(*) '满标项目数'
		FROM
			loan.t_ls_trade_order a
		WHERE
			a.TRADE_TYPE = 'TRANSIT'
		<if test="beginTime!=null">
			<![CDATA[ AND a.TRADE_DATE >= #{beginTime} ]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[ AND a.TRADE_DATE < #{endTime} ]]>
		</if>
	) bidSuccessNum,
	(
		SELECT
			sum(a.AMOUNT) '满标项目金额'
		FROM
			loan.t_ls_trade_order a
		WHERE
			a.TRADE_TYPE = 'TRANSIT'
		<if test="beginTime!=null">
			<![CDATA[ AND a.TRADE_DATE >= #{beginTime} ]]>
		</if>
		<if test="endTime!=null">
			<![CDATA[ AND a.TRADE_DATE < #{endTime} ]]>
		</if>
	) bidSuccessAmount,
	(
		SELECT
			SUM(AMOUNT)
		FROM
			invest.t_bid_order
		WHERE
			`STATUS` = 'PAY_SUCCESS'
	) paySuccessAmount,
	(
		SELECT
			sum(a.AMOUNT)
		FROM
			invest.t_bid_order a
		INNER JOIN invest.t_invest_subject b ON a.SUBJECT_NO = b.SUBJECT_NO
		WHERE
			a.SUBJECT_TYPE IN ('SUBJECT')
		<if test="monthBeginTime != null">
			<![CDATA[ AND a.CREATE_TIME >= #{monthBeginTime} ]]>
		</if>
		<if test="monthEndTime != null">
			<![CDATA[ AND a.CREATE_TIME < #{monthEndTime} ]]>
		</if>
		AND a.STATUS IN (
			'PAY_SUCCESS',
			'BID_SUCCESS'
		)
		AND b. STATUS IN ('01', '05', '10', '15', '20')
	) regularInvestAmountOfMonth,
	SELECT
			count(0)
		FROM
			custody_shbk.tr_custody_memberinfo
		WHERE
			platformUserNo IN (
				'20180413100931R015470',
				'20180413100931R015409',
				'20180413100931R015361',
				'20180413100931R015331',
				'20180413100930R014321',
				'20180413100930R014599',
				'20180413100930R014370',
				'20180413100930R014243',
				'20180413100930R014151',
				'20180413100930R013946',
				'20180413100930R013920',
				'20180413100929R012631',
				'20180413100928R012250',
				'20180413100928R011491',
				'20180413100929R013758',
				'20180413100929R013589',
				'20180413100929R013567',
				'20180413100929R013286',
				'20180413100929R013146',
				'20180413100929R012853',
				'20180413100926R008492',
				'20180413100914R002682',
				'20180413100913R001900',
				'20180413100913R001842',
				'20180413100918R004491',
				'20180413100913R001778',
				'20180413100912R001335',
				'20180413100910R000232',
				'20180413100909R000039',
				'20180413102143R231181',
				'20180413101146R055283',
				'20180413101146R055209',
				'20180413101146R054798',
				'20180413101112R024821',
				'20180413102141R230941',
				'20180413102140R230567',
				'20180413101106R015763',
				'20180413102142R231008',
				'20180413102142R230990',
				'20180413102138R230337',
				'20180413102126R226982',
				'20180413102118R225528',
				'20180413102037R216133',
				'20180413101542R130312',
				'20180413101526R122753',
				'20180413101500R107562',
				'20180413101459R106993',
				'20180413101432R082356',
				'20180413102458R242621',
				'20180413102458R242436',
				'20180413102456R240454',
				'20180413102456R238836',
				'20180413102455R238112',
				'20180413102452R231894',
				'20180413102451R231402',
				'20180413103231R275799',
				'20180413103231R275501',
				'20180413103230R274475',
				'20180413103229R274344',
				'20180413103228R273105',
				'20180413103228R273094',
				'20180413103228R273384',
				'20180413103432R278462',
				'20180413103226R272663',
				'20180413103215R262213',
				'20180413103217R263625',
				'20180413103206R250606',
				'20180413103206R250090',
				'20180413103432R278442',
				'20180413103206R250008',
				'20180413103206R248829',
				'20180413103205R248076',
				'20180413103206R250607',
				'20180413103206R248969',
				'20180413103205R248603',
				'20180413103431R278191',
				'20180413103431R278170',
				'20180413103431R277772',
				'20180413103431R277155',
				'20180516135501R000205',
				'20180516135501R000123',
				'20180413103431R277362'
			)
		<![CDATA[ AND UPDATE_TIME < '2018-05-17 21:00:00' ]]>
	) isNoActivePersonNums,
	(
		SELECT
			sum(a.balance)
		FROM
			(
				SELECT
					t3.memberid memberId,
					t3.title authName,
					d.identity phoneNum,
					sum(t3.amount) balance
				FROM
					(
						SELECT
							d.memberId,
							d.title,
							sum(d.balance) amount
						FROM
							(
								SELECT
									IFNULL(b.memberid, c.memberId) memberId,
									IFNULL(
										b.realName,
										c.enterpriseName
									) title,
									a.balance balance
								FROM
									custody_shbk.t_settle_balance a
								LEFT JOIN custody_shbk.tr_custody_memberinfo b ON a.platformUserNo = b.platformUserNo
								LEFT JOIN custody_shbk.t_enterprise_info c ON c.platformUserNo = a.platformUserNo
								WHERE
									a.settle_date = DATE_ADD(CURDATE(), INTERVAL - 1 DAY)
								AND a.balance > 0
							) d
						GROUP BY
							d.memberid
						UNION
							SELECT
								t2.member_id memberid,
								IFNULL(
									b.realName,
									c.enterpriseName
								) title,
								sum(
									CASE direction
									WHEN 1 THEN
										amount
									WHEN 2 THEN
										- amount
									END
								) amount
							FROM
								invest.t_all_trade_order t2
							LEFT JOIN (
								SELECT
									memberId,
									max(realName) realName
								FROM
									custody_shbk.tr_custody_memberinfo
								GROUP BY
									memberId
							) b ON t2.member_id = b.memberId
							LEFT JOIN (
								SELECT
									memberId,
									max(enterpriseName) enterpriseName
								FROM
									custody_shbk.t_enterprise_info
								GROUP BY
									memberId
							) c ON t2.member_id = c.memberId
							WHERE
								t2.`status` = 'SUCCESS'
							AND t2.gmt_time > DATE_ADD(CURDATE(), INTERVAL 0 DAY)
							<![CDATA[ AND t2.gmt_time < DATE_ADD(CURDATE(), INTERVAL 1 DAY) ]]>
							GROUP BY
								t2.member_id
							UNION
								SELECT
									a.member_id memberid,
									IFNULL(
										b.realName,
										c.enterpriseName
									) title,
									sum(- amount) amount
								FROM
									invest.t_bid_order a
								LEFT JOIN (
									SELECT
										memberId,
										max(realName) realName
									FROM
										custody_shbk.tr_custody_memberinfo
									GROUP BY
										memberId
								) b ON a.member_id = b.memberId
								LEFT JOIN (
									SELECT
										memberId,
										max(enterpriseName) enterpriseName
									FROM
										custody_shbk.t_enterprise_info
									GROUP BY
										memberId
								) c ON a.member_id = c.memberId
								WHERE
									a.`status` = 'PAY_SUCCESS'
								<![CDATA[ AND a.create_time < DATE_ADD(CURDATE(), INTERVAL 0 DAY) ]]>
								GROUP BY
									a.member_id
								UNION
									SELECT
										a.member_id memberid,
										IFNULL(
											b.realName,
											c.enterpriseName
										) title,
										sum(- amount) amount
									FROM
										invest.t_bid_order a
									LEFT JOIN (
										SELECT
											memberId,
											max(realName) realName
										FROM
											custody_shbk.tr_custody_memberinfo
										GROUP BY
											memberId
									) b ON a.member_id = b.memberId
									LEFT JOIN (
										SELECT
											memberId,
											max(enterpriseName) enterpriseName
										FROM
											custody_shbk.t_enterprise_info
										GROUP BY
											memberId
									) c ON a.member_id = c.memberId
									WHERE
										a.`status` = 'BID_SUCCESS'
									<![CDATA[ AND a.create_time < DATE_ADD(CURDATE(), INTERVAL 0 DAY) ]]>
									AND a.modified_time > DATE_ADD(CURDATE(), INTERVAL 0 DAY)
									GROUP BY
										a.member_id
					) t3
				LEFT JOIN member.tm_member_identity d ON t3.MEMBERID = d.MEMBER_ID
				AND d.PID = 1
				AND d.IDENTITY_TYPE = 2
				WHERE
					t3.memberId NOT IN (
						'SYS_GENERATE_000',
						'SYS_GENERATE_002',
						'SYS_GENERATE_002',
						'SYS_GENERATE_004'
					)
				AND t3.memberId NOT LIKE '2%'
				GROUP BY
					t3.memberid
				ORDER BY
					sum(t3.amount) DESC
			) a
	) balanceAllAmount;
 </select>
</mapper>