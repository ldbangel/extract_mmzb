<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd">
	
  	<!-- kejin数据库数据源 -->
  	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method ="close" >    
       <!-- 数据库基本信息配置 -->  
       <property name = "username" value = "${kejin.jdbc.username}" />    
       <property name = "password" value = "${kejin.jdbc.password}" />    
       <property name = "url" value = "${kejin.jdbc.jdbcUrl}?allowMultiQueries=true" />    
       <property name = "filters" value = "stat" />    
        <!-- 最大并发连接数 -->  
       <property name = "maxActive" value = "20" />  
       <!-- 初始化连接数量 -->  
       <property name = "initialSize" value = "1" />  
       <!-- 配置获取连接等待超时的时间 -->  
       <property name = "maxWait" value = "60000" />  
       <!-- 最小空闲连接数 -->  
       <property name = "minIdle" value = "10" />    
       <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
       <property name = "timeBetweenEvictionRunsMillis" value ="60000" />  
       <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
       <property name = "minEvictableIdleTimeMillis" value ="300000" />    
       <property name = "validationQuery" value = "SELECT 'x'" />    
       <property name = "testWhileIdle" value = "true" />    
       <property name = "testOnBorrow" value = "false" />    
       <property name = "testOnReturn" value = "false" />    
       <property name = "maxOpenPreparedStatements" value ="20" />  
       <!-- 打开 removeAbandoned 功能 -->  
       <property name = "removeAbandoned" value = "true" />  
       <!-- 1800 秒，也就是 30 分钟 -->  
       <property name = "removeAbandonedTimeout" value ="1800" />  
       <!-- 关闭 abanded 连接时输出错误日志 -->     
       <property name = "logAbandoned" value = "true" />  
  	</bean>
   
    <!--配置sqlSessionFactory 并读取mybatis的一些配置-->
    <bean name = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <!-- 配置mybatis的日志记录 -->
	    <property name="configLocation" value="classpath:mybatis-config.xml"/>   
	    <property name="mapperLocations">
	    	<list>
	    		<value>classpath:sql-mapper/kejin/**/*.xml</value>
	    		<value>classpath:sql-mapper/kejin/service/*.xml</value>
	    	</list>
	    </property>
	   	<property name="plugins">
            <array>
	            <bean class="com.github.pagehelper.PageHelper">
	                <property name="properties">
	                    <value>
	                        dialect=mysql
	                    </value>
	                </property>
	            </bean>
            </array>
        </property>
    </bean>
    
    
    <!-- 自动扫描 将Mapper接口生成代理注入到Spring -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.kejin.extract.kejin.process.dao,
											com.kejin.extract.kejin.service.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
    
    <!-- 配置事物 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
   	<!-- 事物的具体内容 -->
	<tx:advice id="kejinTransactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- 定义一个切面,在定义的切面上加入事物 -->
	<!-- <aop:config>
		<aop:pointcut id="kejinTransactionPointcut" expression="execution(* com.extract.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="kejinTransactionAdvice" />
	</aop:config> -->
</beans>
